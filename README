NAME
    rpglectags - Creating ctags compatible files from RPG/ILE files

SYNOPSIS
    rpglectags [-f output] [-a] [--help] [--version] [files]...

INSTALL
    First clone this repository, and then run:

        sudo make install

    This will install two files: `/usr/bin/rpglectags' and
    `/usr/share/man/man1/rpglectags.1'.

    One can uninstall by running:

        sudo make clean

DESCRIPTION
    rpglectags will create a ctags compatible file called `tags'.

    The rpglectags program generate an index (or `tag') file for RPG/ILE
    objects found in file(s). This tag file allows these items to be quickly
    and easily located by a text editor or other utility. A `tag' signifies
    a language object for which an index entry is available.

    Tag index files are supported by a numerous editors, which allows the
    user to locate the objects associated with a name appearing in a source
    file and jump to the file and line which defines the name. Among other
    are:

        Vi(1), Vim(1), Sublime Text, Visual Studio Code, Notepad++, ...

    At the moment there is support for:

    Procedures
        Free format is supported though `dcl-proc'.

        Fixed format is supported though `pxxxxxxxxxxxxxxxxxb'. Continues
        procedure names is also supported, i.e.
        `pxxxxxx...\np_________________b'. Where `\n' is a literal newline
        and `_' is a literal space. Up to 7 leading spaces will be
        supported.

    Subroutines
        Free format is supported though `begsr'.

        Fixed format is supported though `cxxxxxxxxxxxxxxxxxxxbegsr'.
        Continues declarations is not supported. Up to 7 leading spaces will
        be supported.

    Procedure interface
        Free format is supported though `dcl-pi'.

        Fixed format is supported though `dxxxxxxxxxxxxxxxxxpi'. Continues
        procedure interfaces is also supported, i.e.
        `dxxxxxx...\nd_________________pi'. Where `\n' is a literal newline
        and `_' is a literal space. Up to 7 leading spaces will be
        supported.

    Data structures
        Free format is supported though `dcl-ds'.

        Fixed format is supported though `dxxxxxxxxxxxxxxxxxds'. Continues
        declarations is not supported. Up to 7 leading spaces will be
        supported.

    Stand alone and constant declarations
        Free format is supported though `dcl-s' and `dcl-c'.

        Fixed format is supported though `dxxxxxxxxxxxxxxxxxs' and
        `dxxxxxxxxxxxxxxxxxc'. Continues declarations is not supported. Up
        to 7 leading spaces will be supported.

OPTIONS
    -f *file*
        Write tags til specified file. Value of `-' writes tags to stdout.
        Default is `tags'

    -a  Append the tags to an existing tag file

    -h, --help
        Print a summary of options and exit.

    --version
        Print version information on standard output then exit successfully.

EXAMPLES
    To create tags from the file `test.rpgle', you'd use

        rpglectags test.rpgle

    To create tags from all rpgle and sqlrpgle files recursively, you might
    say

        find . -type f \( -name '*.rpgle' -o -name '*.sqlrpgle' \) \
          -exec rpglectags {} +

    More examples:

        rpglectags -f - test2.rpgle        # Print tags to stdout
        rpglectags -a test2.rpgle          # Append tags to the 'tags' file

TAG FILE FORMAT
    Each entry in the tag file consists of a separate line, each looking
    like this in the most general case:

        {tagname}<TAB>{tagfile}<TAB>{tagaddress};"<TAB>{tagfields}

    The fields and separators of these lines are specified as follows:

    1.  Tag name

    2.  Single tab character

    3.  Name of the file in which the object associated with the tag is
        located

    4.  Single tab character

    5.  Tag address. A non magic pattern enclosed in / or ? or a line
        number.

    6.  A constant `;"' for backward compatibility with vi(1)

    7.  Extra fields narrowing down the type of tag entry, i.e. kind:{fvms},
        struct:nameOfStruct

EXIT STATUS
    The following exit values shall be returned:

    0   Successful completion.

    1   Error parsing command-line argument.

SEE ALSO
    ctags(1)

AUTHOR
    Andreas Louv <andreas@louv.dk>.

LICENSE
    This program is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

